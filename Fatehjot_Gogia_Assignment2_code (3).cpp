#include <iostream>
#include <cmath>
#define pi 3.14159265358979323846 //defines "pi"
using namespace std;


 //Calculates the maxiumum power able to be produced by each turbine
double idealturbinepower (double radiuswt, double averagewindspeed, double density ) { 
    double idealpow = 0.5*density*(pi*(pow(radiuswt,2)))*(pow(averagewindspeed, 3));
        idealpow = idealpow/1000;
    return idealpow;
}

//calculates the actual power produced by one turbine, which is the ideal (maxium) turbine power multiplied by the operating efficiency
double actualturbinepower (double idealpower, double operatingefficiency) {
    double actualpower = idealpower*operatingefficiency;
    return actualpower;
}

//calculates the total windfarm power by multiplying actual power produced by one turbine by the number of wind turbines
double windfarmpower (double actualpower, double numofwt) {
    return (actualpower*numofwt);
}

/*defines variables and stores user input in them. Then, the function calls other functions to calculate output and stores them 
before outputting them to the user. For each user input, there is a while loop that checks if the user has entered a valid input.
If the user has not entered a valid input, the loop while continue and the user will be reprompted until the user enters a valid input */
int main () {
    double averagewindspeed,operatingefficiency,radiuswt,numofwt;
    double density (1.293);
    double maxpower;
    
    cout << "Enter average wind speed (m/s)" << endl;
        cin>> averagewindspeed;
             while (cin.fail() ||averagewindspeed < 0) {  //checks for valid speed input
            cin.clear();
            cin.ignore(256, '\n');
            cout << "Invalid input. Try again" <<endl;
            cin>>averagewindspeed; //stores valid user input into the variable "averagewindspeed"
        }

    cout << "Enter opearting efficiency of wind turbine (%)" << endl;
        cin>> operatingefficiency;
            while (cin.fail() ||operatingefficiency < 0 ||operatingefficiency > 100) { //checks for valid operating efficiency output
            cin.clear();
            cin.ignore(256, '\n');
            cout << "Invalid input. Try again" <<endl;
            cin>>operatingefficiency; //stores valid user input into the variable "operatingefficiency"
           
        }
        operatingefficiency = operatingefficiency / 100; //We were given a percentage, but for our calculations we need a decimal so value was converted
   
    cout << "Enter radius of wind turbine blades (m)" << endl;
        cin>> radiuswt;
        while (cin.fail() ||radiuswt < 0) { //checks for valid radius of wind turbine
            cin.clear();
            cin.ignore(256, '\n');
            cout << "Invalid input. Try again" <<endl;
            cin>>radiuswt; } //stores valid user input into the variable "radiuswt"
    
    cout << "Enter number of wind turbines (#)" << endl;
         cin>> numofwt;
         while (cin.fail() ||numofwt < 0) { //checks for valid number of wind turbines
            cin.clear();
            cin.ignore(256, '\n');
            cout << "Invalid input. Try again" <<endl;
            cin>>numofwt;} //stores valid user input into the variable "numofwt"
    
    maxpower = idealturbinepower(radiuswt, averagewindspeed, density); //inputs value of the idealturbinepower function with given parameters into variable "maxpower"
    double actualpower = actualturbinepower(maxpower, operatingefficiency); //creates new variable, actualpower, that stores the returned value of the actualturbinepower function
    double actualwindfarmpower = windfarmpower (actualpower, numofwt); //creates new variable, actualwindfarmpower, that stores the returned value of the windfarmpower function
    
    //these following three commands output to the user the calculated values of the max power of wind turbine, the actual power of each turbine, and  the actual power generated by the windfarm
    cout << "The maximum power able to be generated by one turbine is " << maxpower <<" kW" <<endl;
    cout << "The actual power generated by each turbine is " << actualpower <<" kW" <<endl;
    cout << "The actual power generated by the wind farm is " << actualwindfarmpower << " kW" <<endl;
    return 0;

}

